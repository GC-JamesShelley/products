name: doc-index-updater-master

on:
  push:
    branches:
      - master
    paths:
      - rust-toolchain
      - medicines/doc-index-updater/**
      - medicines/search-client/**
      - manifests/doc-index-updater/**
      - .github/workflows/doc-index-updater-master.yaml
      - .github/workflows/doc-index-updater-release.yaml

env:
  IMAGE: mhraproductsnonprodregistry.azurecr.io/products/doc-index-updater

jobs:
  build-and-test:
    name: Build, Test and Deploy
    runs-on: ubuntu-latest

    steps:
      - name: Clone Repo
        uses: actions/checkout@v2
        with:
          path: products

      - uses: dorny/paths-filter@v2.5.1
        id: filter
        with:
          working-directory: products
          filters: |
            src:
              - rust-toolchain
              - medicines/doc-index-updater/**/*
              - medicines/search-client/**/*

      - name: Docker login
        uses: azure/docker-login@v1
        if: steps.filter.outputs.src == 'true'
        with:
          login-server: mhraproductsnonprodregistry.azurecr.io
          username: mhraproductsnonprodregistry
          password: ${{ secrets.REGISTRY_PASSWORD }}

      - name: Make toolchain version available in current directory
        if: steps.filter.outputs.src == 'true'
        run: cp products/rust-toolchain .

      - uses: actions-rs/toolchain@v1
        if: steps.filter.outputs.src == 'true'
        with:
          components: clippy

      - name: Cache cargo
        uses: actions/cache@v2
        if: steps.filter.outputs.src == 'true'
        with:
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            products/medicines/doc-index-updater/target
          key: cargo-${{ hashFiles('products/medicines/doc-index-updater/Cargo.lock') }}-1

      - name: Install redis
        uses: shogo82148/actions-setup-redis@v1
        if: steps.filter.outputs.src == 'true'
        with:
          auto-start: "false"

      - name: Build and test doc-index-updater service
        if: steps.filter.outputs.src == 'true'
        working-directory: products/medicines/doc-index-updater
        run: |
          set -e
          set -a && source .env.base && set +a
          cargo clippy --release -- -D warnings
          cargo build --release
          cargo test --release

      - name: Build and push Docker image
        if: steps.filter.outputs.src == 'true'
        working-directory: products/medicines/doc-index-updater
        run: |
          TAG="$(git rev-parse --short=7 ${{ github.sha }})"
          make ci-master tag=$TAG image=$IMAGE
          DIGEST="$(docker inspect --format='{{index .RepoDigests 0}}' ${IMAGE}:${TAG})"
          echo "TAG=$TAG" >>$GITHUB_ENV
          echo "DIGEST=$DIGEST" >>$GITHUB_ENV

      - name: Clone Deployments repo
        uses: actions/checkout@v2
        with:
          repository: MHRA/deployments
          path: deployments
          token: ${{ secrets.DEPLOYMENTS_REPO_TOKEN }}

      - name: Update image tag
        uses: stefanprodan/kube-tools@v1
        with:
          kustomize: 3.4.0
          command: |
            set -ex
            SOURCE="${PWD}/products/manifests/doc-index-updater/overlays/non-prod"
            DEST="${PWD}/deployments/doc-index-updater/non-prod"

            cd $SOURCE 
            [[ ! -z "${DIGEST}" ]] && kustomize edit set image $DIGEST
            mkdir -p "${DEST}"
            kustomize build . > "${DEST}/manifests.yaml"

            cd $DEST
            git config --local user.email "CD.no.reply@mhra.gov.uk"
            git config --local user.name "MHRA CI/CD"
            git add --all
            git diff-index --quiet HEAD || git commit -m "CI: Update image for $TAG"
            declare -i n
            n=0
            until [ $n -ge 5 ]
            do
              git push && break
              n+=1
              git pull --rebase
            done
